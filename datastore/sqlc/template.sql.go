// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: template.sql

package sqlc

import (
	"context"
	"database/sql"
	"time"
)

const getTemplateByID = `-- name: GetTemplateByID :one
SELECT id, name, entry_block_id FROM templates WHERE id = ?
`

type GetTemplateByIDRow struct {
	ID           string
	Name         string
	EntryBlockID string
}

func (q *Queries) GetTemplateByID(ctx context.Context, id string) (GetTemplateByIDRow, error) {
	row := q.db.QueryRowContext(ctx, getTemplateByID, id)
	var i GetTemplateByIDRow
	err := row.Scan(&i.ID, &i.Name, &i.EntryBlockID)
	return i, err
}

const insertTemplate = `-- name: InsertTemplate :exec
INSERT INTO templates (id, entry_block_id, name, created_at, updated_at, deleted_at) VALUES (?, ?, ?, ?, ?, ?)
`

type InsertTemplateParams struct {
	ID           string
	EntryBlockID string
	Name         string
	CreatedAt    time.Time
	UpdatedAt    sql.NullTime
	DeletedAt    sql.NullTime
}

func (q *Queries) InsertTemplate(ctx context.Context, arg InsertTemplateParams) error {
	_, err := q.db.ExecContext(ctx, insertTemplate,
		arg.ID,
		arg.EntryBlockID,
		arg.Name,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.DeletedAt,
	)
	return err
}
