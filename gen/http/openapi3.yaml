openapi: 3.0.3
info:
  title: Space CMS API Service
  description: Auth service for SpaceCMS. An open source content management system.
  version: "1.0"
servers:
- url: http://localhost:8000
paths:
  /api/v1/openapi.json:
    get:
      tags:
      - auth
      summary: Download ./gen/http/openapi.json
      operationId: auth#/api/v1/openapi.json
      responses:
        "200":
          description: File downloaded
  /api/v1/pages:
    post:
      tags:
      - cms
      summary: CreatePage cms
      description: Create a page
      operationId: cms#CreatePage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePageRequestBody'
            example:
              createdAt: "2014-06-29T21:24:29Z"
              id: FF1D889F-0741-6290-783B-66E606310D86
              isActive: false
              meta:
                description: Excepturi non occaecati odit voluptates deleniti.
                title: Dolores optio.
              templateId: Nisi odio velit ducimus facilis molestiae.
              url: Ratione reprehenderit quae voluptas.
      responses:
        "201":
          description: Created response.
        "400":
          description: 'badrequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'notfound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: 'servererror: Internal Server Error response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - jwt_header_Authorization:
        - api:read
        - api:write
  /api/v1/templates:
    post:
      tags:
      - cms
      summary: CreateTemplate cms
      description: Create a template.
      operationId: cms#CreateTemplate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequestBody'
            example:
              blockId: Animi et iure fugit vitae totam.
              createdAt: "1975-01-21T23:59:55Z"
              id: 74C53540-E974-ABFF-2565-6BF99F9017B2
              name: Atque sint ea laborum.
      responses:
        "201":
          description: Created response.
        "400":
          description: 'badrequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'notfound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: 'servererror: Internal Server Error response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - jwt_header_Authorization:
        - api:read
        - api:write
  /api/v1/user/signup:
    post:
      tags:
      - auth
      summary: CreateAccount auth
      description: Create an account by email address and password.
      operationId: auth#CreateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequestBody'
            example:
              email: Consequatur aut eos est dolor.
              id: Ea alias minus possimus aut.
              name: Ea minus cupiditate.
              password: Omnis ex.
      responses:
        "201":
          description: Created response.
        "400":
          description: 'badrequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'notfound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: 'servererror: Internal Server Error response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/tokens:
    post:
      tags:
      - auth
      summary: GrantToken auth
      description: Create an account by email address and password.
      operationId: auth#GrantToken
      parameters:
      - name: __Host-token
        in: cookie
        allowEmptyValue: true
        schema:
          type: string
          example: Eius odit nihil mollitia.
        example: Commodi non illo.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantTokenRequestBody'
            example:
              email: Quia illo voluptatem.
              password: Quas quas autem.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
              example:
                accessExpiryTime: 539141107233365886
                accessExpiryTimeStamp: Molestiae aliquid.
                accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzaWQiOiJkYmViMjlhYTMyYjg0MTMxYTA0NjY4MDAyNzAxNWEwZSIsInJvbGUiOlsiQWRtaW5pc3RyYXRvcnMiLCJSZWdpc3RlcmVkIFVzZXJzIiwiU3Vic2NyaWJlcnMiXSwiaXNzIjoidGVzdHNpdGVjZS5sdmgubWUiLCJleHAiOjE0NTA4MzU2ODMsIm5iZiI6MTQ1MDgzMTc4M30.Yf3mmBJ8nV_IozqvvLc8L34dDklU2J7z0uXn3jsICp0
                refreshExpiryTime: 3466291057557277020
                refreshExpiryTimeStamp: Et modi est.
                refreshToken: Qui sit reprehenderit a ut et ea.
        "400":
          description: 'badrequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'notfound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: 'servererror: Internal Server Error response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    CreateAccountRequestBody:
      type: object
      properties:
        email:
          type: string
          description: Email address of the user
          example: Quaerat non magnam dolorem.
        id:
          type: string
          description: ID of the user
          example: Odio nesciunt aut perferendis qui nam.
        name:
          type: string
          description: Full name of the user
          example: Libero omnis consequuntur ut alias.
        password:
          type: string
          description: Password of the user. This is never returned to the client.
          example: At quis quia non reprehenderit quo necessitatibus.
      example:
        email: Voluptas saepe optio sint.
        id: Similique vitae.
        name: Aut aliquid.
        password: Reprehenderit occaecati id voluptas laudantium.
      required:
      - email
      - name
      - password
    CreatePageRequestBody:
      type: object
      properties:
        createdAt:
          type: string
          example: "1976-02-14T03:08:26Z"
          format: date-time
        id:
          type: string
          description: Page UUID
          example: AC77D914-0A36-9917-2BA7-F519556A50B8
          format: uuid
        isActive:
          type: boolean
          description: Page active
          example: true
        meta:
          $ref: '#/components/schemas/Meta'
        templateId:
          type: string
          description: Page template UUID
          example: Non quia a voluptas.
        url:
          type: string
          description: Page URL
          example: Vero a voluptatem modi itaque.
      example:
        createdAt: "1979-02-08T21:16:20Z"
        id: 4CCDE767-7648-444F-D09F-4B4FFE4EB36B
        isActive: false
        meta:
          description: Excepturi non occaecati odit voluptates deleniti.
          title: Dolores optio.
        templateId: Eaque ut harum itaque.
        url: Maxime dolor sed consequatur quisquam qui.
      required:
      - id
      - url
      - templateId
      - isActive
      - meta
      - createdAt
    CreateTemplateRequestBody:
      type: object
      properties:
        blockId:
          type: string
          description: Entry block of the template
          example: In corrupti temporibus aut iure suscipit et.
        createdAt:
          type: string
          example: "2007-02-17T01:13:35Z"
          format: date-time
        id:
          type: string
          description: Template UUID
          example: AB12B85B-1864-53B4-4A92-3519B45D0D5E
          format: uuid
        name:
          type: string
          description: Name of the template
          example: Odit assumenda nisi eum.
      example:
        blockId: Et ipsam.
        createdAt: "1995-07-09T08:19:03Z"
        id: 77DFBD55-EC3C-CF64-7021-5A80D932517B
        name: Officia iste rerum rem doloribus.
      required:
      - id
      - name
      - createdAt
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    GrantTokenRequestBody:
      type: object
      properties:
        email:
          type: string
          description: User email
          example: Et est.
        password:
          type: string
          description: User password
          example: Et qui adipisci.
      example:
        email: Saepe vero culpa cumque eligendi.
        password: Labore in alias.
      required:
      - email
      - password
    Meta:
      type: object
      properties:
        description:
          type: string
          description: Page meta description
          example: Excepturi dolores.
        title:
          type: string
          description: Page meta title
          example: Totam modi ab pariatur ducimus ex non.
      example:
        description: Sed qui.
        title: Rem maxime temporibus quod magnam.
    Token:
      type: object
      properties:
        accessExpiryTime:
          type: integer
          example: 3196062381164318400
          format: int64
        accessExpiryTimeStamp:
          type: string
          example: Ea et omnis ab doloremque magni.
        accessToken:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzaWQiOiJkYmViMjlhYTMyYjg0MTMxYTA0NjY4MDAyNzAxNWEwZSIsInJvbGUiOlsiQWRtaW5pc3RyYXRvcnMiLCJSZWdpc3RlcmVkIFVzZXJzIiwiU3Vic2NyaWJlcnMiXSwiaXNzIjoidGVzdHNpdGVjZS5sdmgubWUiLCJleHAiOjE0NTA4MzU2ODMsIm5iZiI6MTQ1MDgzMTc4M30.Yf3mmBJ8nV_IozqvvLc8L34dDklU2J7z0uXn3jsICp0
        refreshExpiryTime:
          type: integer
          example: 8755479929559018545
          format: int64
        refreshExpiryTimeStamp:
          type: string
          example: Exercitationem et delectus nisi nihil numquam.
        refreshToken:
          type: string
          example: Culpa laborum et nesciunt nesciunt.
      example:
        accessExpiryTime: 6252863462487333598
        accessExpiryTimeStamp: Quos error.
        accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzaWQiOiJkYmViMjlhYTMyYjg0MTMxYTA0NjY4MDAyNzAxNWEwZSIsInJvbGUiOlsiQWRtaW5pc3RyYXRvcnMiLCJSZWdpc3RlcmVkIFVzZXJzIiwiU3Vic2NyaWJlcnMiXSwiaXNzIjoidGVzdHNpdGVjZS5sdmgubWUiLCJleHAiOjE0NTA4MzU2ODMsIm5iZiI6MTQ1MDgzMTc4M30.Yf3mmBJ8nV_IozqvvLc8L34dDklU2J7z0uXn3jsICp0
        refreshExpiryTime: 3925041465761616217
        refreshExpiryTimeStamp: Reprehenderit soluta.
        refreshToken: Doloribus ipsa fuga praesentium magni natus.
      required:
      - accessToken
      - refreshToken
      - accessExpiryTime
      - refreshExpiryTime
      - accessExpiryTimeStamp
      - refreshExpiryTimeStamp
  securitySchemes:
    jwt_header_Authorization:
      type: http
      description: Secures endpoint by requiring a valid JWT token retrieved via the
        signin endpoint. Supports scopes "api:read" and "api:write".
      scheme: bearer
tags:
- name: auth
  description: RESTFUL API Backend for Invoicify. An open source invoicing web app.
- name: cms
  description: CMS service for SpaceCMS. An open source content management system.
