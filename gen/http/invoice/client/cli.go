// Code generated by goa v3.7.3, DO NOT EDIT.
//
// invoice HTTP client CLI support package
//
// Command:
// $ goa gen github.com/samverrall/invoice-app/invoice/design

package client

import (
	"encoding/json"
	"fmt"

	invoice "github.com/samverrall/invoice-app/gen/invoice"
)

// BuildCreateAccountPayload builds the payload for the invoice create-account
// endpoint from CLI flags.
func BuildCreateAccountPayload(invoiceCreateAccountBody string) (*invoice.User, error) {
	var err error
	var body CreateAccountRequestBody
	{
		err = json.Unmarshal([]byte(invoiceCreateAccountBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"email\": \"Ut odio neque nesciunt.\",\n      \"id\": \"Illo itaque eveniet non rerum et.\",\n      \"name\": \"Quisquam vel.\",\n      \"password\": \"Consectetur esse officiis voluptatum ea nihil fugit.\"\n   }'")
		}
	}
	v := &invoice.User{
		ID:       body.ID,
		Email:    body.Email,
		Name:     body.Name,
		Password: body.Password,
	}

	return v, nil
}

// BuildGetAccountPayload builds the payload for the invoice get-account
// endpoint from CLI flags.
func BuildGetAccountPayload(invoiceGetAccountUserID string) (*invoice.GetAccountPayload, error) {
	var userID string
	{
		userID = invoiceGetAccountUserID
	}
	v := &invoice.GetAccountPayload{}
	v.UserID = &userID

	return v, nil
}
