// Code generated by goa v3.7.3, DO NOT EDIT.
//
// invoice HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/samverrall/invoice-app/invoice/design

package server

import (
	"context"
	"io"
	"net/http"

	invoice "github.com/samverrall/invoice-app/gen/invoice"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// EncodeCreateAccountResponse returns an encoder for responses returned by the
// invoice create-account endpoint.
func EncodeCreateAccountResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res, _ := v.(*invoice.User)
		enc := encoder(ctx, w)
		body := NewCreateAccountResponseBody(res)
		w.WriteHeader(http.StatusCreated)
		return enc.Encode(body)
	}
}

// DecodeCreateAccountRequest returns a decoder for requests sent to the
// invoice create-account endpoint.
func DecodeCreateAccountRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (interface{}, error) {
	return func(r *http.Request) (interface{}, error) {
		var (
			body CreateAccountRequestBody
			err  error
		)
		err = decoder(r).Decode(&body)
		if err != nil {
			if err == io.EOF {
				return nil, goa.MissingPayloadError()
			}
			return nil, goa.DecodePayloadError(err.Error())
		}
		err = ValidateCreateAccountRequestBody(&body)
		if err != nil {
			return nil, err
		}
		payload := NewCreateAccountUser(&body)

		return payload, nil
	}
}
