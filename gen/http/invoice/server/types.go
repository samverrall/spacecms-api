// Code generated by goa v3.7.3, DO NOT EDIT.
//
// invoice HTTP server types
//
// Command:
// $ goa gen github.com/samverrall/invoice-app/invoice/design

package server

import (
	invoice "github.com/samverrall/invoice-app/gen/invoice"
	goa "goa.design/goa/v3/pkg"
)

// CreateAccountRequestBody is the type of the "invoice" service
// "create-account" endpoint HTTP request body.
type CreateAccountRequestBody struct {
	Email    *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	Name     *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Password *string `form:"password,omitempty" json:"password,omitempty" xml:"password,omitempty"`
}

// CreateAccountResponseBody is the type of the "invoice" service
// "create-account" endpoint HTTP response body.
type CreateAccountResponseBody struct {
	Email    string `form:"email" json:"email" xml:"email"`
	Name     string `form:"name" json:"name" xml:"name"`
	Password string `form:"password" json:"password" xml:"password"`
}

// NewCreateAccountResponseBody builds the HTTP response body from the result
// of the "create-account" endpoint of the "invoice" service.
func NewCreateAccountResponseBody(res *invoice.User) *CreateAccountResponseBody {
	body := &CreateAccountResponseBody{
		Email:    res.Email,
		Name:     res.Name,
		Password: res.Password,
	}
	return body
}

// NewCreateAccountUser builds a invoice service create-account endpoint
// payload.
func NewCreateAccountUser(body *CreateAccountRequestBody) *invoice.User {
	v := &invoice.User{
		Email:    *body.Email,
		Name:     *body.Name,
		Password: *body.Password,
	}

	return v
}

// ValidateCreateAccountRequestBody runs the validations defined on
// Create-AccountRequestBody
func ValidateCreateAccountRequestBody(body *CreateAccountRequestBody) (err error) {
	if body.Email == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("email", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Password == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("password", "body"))
	}
	return
}
